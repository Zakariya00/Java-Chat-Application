USE CASES:

In software and systems engineering, the phrase use case is a polyseme with two senses:

1. A usage scenario for a piece of software; often used in the plural to suggest situations where a piece of software may be useful.
2. A potential scenario in which a system receives an external request (such as user input) and responds to it.

-reformulate use cases

NOT DONE
1. server GUI - list of connected users, connection history- "user x has connected", server - close server button - z

DONE
2. timestamp on each message - m

3. file - menu : "save chat log" vilket sparar hela klientens chatt som text fil, help - som förklarar programmet - r, v

4. ljud när man skickar meddelande, när man får meddelande - olika ljud - r, v

DONE
5. broadcast and update message for all clients - all

NOT DONE
6. do you wish to close the server?

NOT DONE
7. do you wish to close the client?

NOT DONE
8. Failed to connect to server- no transition if server is not running. JOption "failed to connect to server - server not running"

9. Client can see who is connected to the server. Server can also see list of users.

10. Server shutdown button.

11. If server shuts down, all client windows need to close. Write to all clients - Server has shut down.

12. skapa en server shutdown meddelande funktion.

13. Help describes the chat

14. Edit - edit username, clear all history, edit chat color, enable/disable mute



förslag: se bara det som skrivits sen client joinat själv.
























